- name: Install neovim dependencies Linux
  tags:
    - nvim
  become: true
  become_user: root
  block:
    - name: Install neovim python dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ python_required_packages }}"
      tags:
        - nvim
        - nvim-python-packages
      when: ansible_os_family == "Debian"
    - name: Install you complete me dependencies
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ ycm_packages }}"
      when: ansible_os_family == "Debian"

- name: Install neovim dependencies arch
  when: ansible_distribution == "Archlinux"
  become: true
  become_user: root
  tags:
    - nvim
  block:
    - name: Install neovim python dependencies
      pacman:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ python_required_packages }}"
      tags:
        - nvim-python-packages
      when: ansible_os_family == "Debian"
    - name: Install you complete me dependencies
      pacman:
        name: "{{ item }}"
        state: present
      with_items:
        - "{{ ycm_packages }}"
      tags:
        - ycm
      when: ansible_os_family == "Debian"

- name: Install neovim
  tags:
    - nvim
  block:
    - name: Add neovim ppa
      become: true
      become_user: root
      apt_repository:
        repo: "{{ neovim_ppa }}"
        state: present
      when: ansible_os_family == "Debian"
      tags:
        - ubuntu
    - name: Install neovim from ppa
      become: true
      become_user: root
      apt:
        name: "{{ neovim_name }}"
        state: "{{ install_state }}"
      when: ansible_os_family == "Debian"
    - name: Install neovim on Arch
      become: true
      become_user: root
      tags:
        - arch
      pacman:
        name: neovim
        state: present
      when: ansible_distribution == "Archlinux"

    - name: Insttall neovim macos
      ansible.builtin.homebrew:
        name: nvim
        state: present
        update_homebrew: yes
      when: ansible_os_family == "Darwin"

- name: Configure neovim
  tags:
    - nvim
  block:
    - name: Cleanup nvim config folder
      shell: >
        rm -rf {{ lookup('env', 'HOME') }}/.config/nvim
    - name: Create nvim dir
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/.config/nvim"
        state: directory
        mode: '0755'
    - name: Install custom nvim conf
      ansible.builtin.shell: >
        stow -t {{ lookup('env', 'HOME') }}/.config/nvim/ -d dotfiles nvim
