# OS  specific

- name: Install ZSH
  become: yes
  become_user: root
  block:
    - name: Install zsh
      ansible.builtin.apt:
        name: zsh
        state: present
      when: ansible_os_family == "Debian"

- name: Install zsh on arch linux
  when: ansible_distribution == "Arch Linux"
  tags:
    - arch
  block:
    - name: Install zsh arch
      pacman:
        name: zsh
        state: present

# OS agnostic

- name: ZSH config and utilities
  tags:
    - arch
    - ubuntu
    - macos
  block:
    - name: Change shell to zsh
      become: yes
      become_user: root
      ansible.builtin.shell: >
        chsh -s `which zsh`

    - name: Cleanup ohmyzsh
      ansible.builtin.shell: >
        rm -rf ~/.oh-my-zsh

    - name: install Oh My Zsh
      ansible.builtin.shell: >
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

    - name: Ensure zshrc file exists
      ansible.builtin.file:
        path: ~/.zshrc
        state: touch

    - name: Install ohmyzsh autosuggestions
      ansible.builtin.git:
        dest: "~/.zsh/zsh-autosuggestions"
        repo: "https://github.com/zsh-users/zsh-autosuggestions"
    - name: Source zsh autosuggestions
      lineinfile:
        path: ~/.zshrc
        line: "source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"

    - name: Add autosuggestions plugin to zsh
      lineinfile:
        path: ~/.zshrc
        line: "plugins=(git zsh-autosuggestions)"

    - name: Change zsh default theme
      block:
        - name: Replace theme
          lineinfile:
            path: ~/.zshrc
            regexp: '^ZSH_THEME='
            line: 'ZSH_THEME="fino"'

    - name: Make zsh start tmux by default
      lineinfile:
        path: ~/.zshrc
        line: "if command -v tmux &> /dev/null && [ -z \"$TMUX\" ]; then exec tmux; fi"

- name: Install gnupg
  when: ansible_distribution == "Ubuntu"
  become: yes
  become_user: root
  apt:
    name: gnupg
    state: present

- name: Install jq
  tags:
    - terminal
    - jq
  block:
    - name: install jq ubuntu
      when: ansible_distribution == "Ubuntu"
      become: yes
      become_user: root
      apt:
        name: jq
        state: present
    - name: install jq macos
      when: ansible_os_family == "Darwin"
      ansible.builtin.homebrew:
        name: jq
        state: present

- name: Install xclip
  when: ansible_os_family == "Darwin"
  ansible.builtin.homebrew:
    name: xclip
    state: present
